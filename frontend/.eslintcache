[{"C:\\Users\\MAV\\mav\\система оценки качества\\frontend\\src\\pages\\Analitics.js":"1","C:\\Users\\MAV\\mav\\система оценки качества\\frontend\\src\\api\\feetback.js":"2","C:\\Users\\MAV\\mav\\система оценки качества\\frontend\\src\\components\\NavBar.js":"3","C:\\Users\\MAV\\mav\\система оценки качества\\frontend\\src\\pages\\AdminDashboard.js":"4","C:\\Users\\MAV\\mav\\система оценки качества\\frontend\\src\\pages\\Login.js":"5"},{"size":6149,"mtime":1611844304162,"results":"6","hashOfConfig":"7"},{"size":231,"mtime":1611666297579,"results":"8","hashOfConfig":"7"},{"size":996,"mtime":1611836464016,"results":"9","hashOfConfig":"7"},{"size":3803,"mtime":1611839519250,"results":"10","hashOfConfig":"7"},{"size":1540,"mtime":1611750636922,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"1x9w93j",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MAV\\mav\\система оценки качества\\frontend\\src\\pages\\Analitics.js",["23"],"import React, { useEffect, useState } from 'react'\r\nimport { VictoryBar, VictoryPie, VictoryGroup,  VictoryChart, VictoryLine, VictoryTheme, VictoryArea } from 'victory';\r\nimport axios from 'axios';\r\nimport NavBar from '../components/NavBar';\r\nimport { getReasons } from '../api/reasons';\r\n\r\n\r\n\r\nconst Analitics = () => { \r\n  const [pieData, setPieData] = useState([]);\r\n  const [selectWorker, setStlectWorker] = useState([]);\r\n  const [dataSucsses, setDataSucsses] = useState([]);\r\n  const [dataDanger, setDataDanger] = useState([]);\r\n  const [workerName, setWorkerName] = useState('');\r\n  const [workerSomeRating, setWorkerSomeRating] = useState(0)\r\n  const [graphiqNegativeReason, setGraphiqNegativeReason] = useState([])\r\n  const [reasons, setReasons] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8080/feetback').then(res => {  // получаем причины негатива\r\n      let data = res.data.filter(el => el.rating === -1).map(el => el.title)\r\n      const dataX = [...new Set(data)]\r\n      const dataArr = dataX.map((el, index) => {\r\n        let count = data.filter((elData) => elData === el)        \r\n        return {x: index + 1, y: count.length, label: el}\r\n      })\r\n      setPieData(dataArr) \r\n      getReasons().then(res => setReasons(res.data))     \r\n    })\r\n\r\n    getGraphiqNegativeReason(13)\r\n\r\n\r\n    axios.get('http://localhost:8080/workers').then(res => { // получаем список сотрудников\r\n      setStlectWorker(res.data)\r\n    })\r\n\r\n\r\n    axios.get('http://localhost:8080/feetback_rating').then(res => {\r\n      const arrDate = res.data.map(el => {\r\n        let date = new Date(el.ts)\r\n        return date.getDate()\r\n      })\r\n      const dataSucsses = [...new Set(arrDate)].map(el => {\r\n        const y = res.data.filter(elData => {\r\n          let date = new Date(elData.ts)\r\n         return elData.rating === 1 && date.getDate() === el\r\n        })\r\n        return {x: el.toString(), y: y.length}\r\n      })\r\n\r\n      const dataDanger = [...new Set(arrDate)].map(el => {\r\n        const y = res.data.filter(elData => {\r\n          let date = new Date(elData.ts)\r\n         return elData.rating === -1 && date.getDate() === el\r\n        })\r\n        return {x: el.toString(), y: y.length}\r\n      })\r\n      setDataDanger(dataDanger)\r\n      setDataSucsses(dataSucsses)\r\n    })\r\n\r\n  }, [])\r\n\r\n  function getGraphiqNegativeReason(id) {\r\n    axios.get(`http://localhost:8080/feetback_by_rating/${id}`).then(res => {\r\n      const reasons = res.data[0].title\r\n      \r\n      let allDate = res.data.map(el => {\r\n        let date = new Date(el.ts)\r\n        return date.getDate()\r\n      })\r\n\r\n      allDate= [...new Set(allDate)]\r\n\r\n      const reasonsData = allDate.map(date => {\r\n        const arrY = res.data.filter(el => {\r\n          let elDate = new Date(el.ts)\r\n          return date === elDate.getDate()\r\n        })\r\n        return {x: date, y: arrY.length}\r\n      })\r\n      setGraphiqNegativeReason(reasonsData)\r\n      console.log('=====>' , res.data, reasons, reasonsData);\r\n    })\r\n  }\r\n\r\n  const selectChageWorker = (e) => {\r\n    if(e.target.value > 0) {\r\n      axios.get(`http://localhost:8080/reasons_by_worker/${e.target.value}`).then(res => {\r\n        let data = res.data.filter(el => el.rating === -1).map(el => el.title)\r\n        const dataX = [...new Set(data)]\r\n        const dataArr = dataX.map((el, index) => {\r\n          let count = data.filter((elData) => elData === el)        \r\n          return {x: index + 1, y: count.length, label: `${el} - ${count.length}`}\r\n        })\r\n        console.log(dataArr);\r\n        console.log(res.data[0].name);\r\n        setWorkerSomeRating(res.data.length)\r\n        setWorkerName(res.data[0].name)\r\n        setPieData(dataArr)\r\n      })\r\n    } else return\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n    <NavBar />\r\n\r\n    <div className='container'>\r\n      <h2>Графики</h2>\r\n      <div className='d-flex' >\r\n        <div style={{width: \"50%\"}}>\r\n\r\n      <VictoryChart>\r\n        <VictoryGroup \r\n        offset={20}\r\n          colorScale={[\"red\", \"green\"]}\r\n        >\r\n          <VictoryBar\r\n            data={dataDanger}\r\n            labels={({ datum }) => datum.y}\r\n          />\r\n          <VictoryBar\r\n            data={dataSucsses}\r\n            labels={({ datum }) => datum.y}\r\n          />\r\n\r\n        </VictoryGroup>      \r\n      </VictoryChart>\r\n      </div>  \r\n        \r\n        <div style={{width: \"50%\"}}>\r\n        <select \r\n          onChange={selectChageWorker} \r\n          className=\"form-select\"\r\n        >\r\n          <option>Выберите сотрудника</option>\r\n          {\r\n            !!selectWorker.length && selectWorker.map(el => <option \r\n            key={el.id} \r\n            value={el.id}           \r\n            >\r\n              {el.name}\r\n            </option>)\r\n          }\r\n        </select>\r\n\r\n        {workerName && <h6>{`${workerName} имеет ${workerSomeRating} отзывов`}</h6>}\r\n\r\n          \r\n          {!pieData.length ? <h2>Загрузка...</h2> : <VictoryPie\r\n            colorScale={[\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\" ]}            \r\n            data={pieData}\r\n            padding={100}\r\n            />\r\n          }\r\n\r\n        </div>\r\n      </div >\r\n      \r\n      <div style={{width: \"50%\"}}>\r\n\r\n        <h3>График по причинам негатива</h3>\r\n\r\n        <select\r\n          onChange={(e) => getGraphiqNegativeReason(e.target.value)}\r\n          className=\"form-select\"\r\n        >\r\n          <option>Выберите причину</option>\r\n          {\r\n            !!reasons.length && reasons.map(el => <option \r\n            key={el.id} \r\n            value={el.id}           \r\n            >\r\n              {el.title}\r\n            </option>)\r\n          }\r\n        </select>\r\n\r\n      <VictoryChart\r\n        theme={VictoryTheme.material}\r\n      >\r\n        <VictoryLine\r\n          style={{\r\n            data: { stroke: \"#c43a31\" },\r\n            parent: { border: \"1px solid #ccc\"}\r\n          }}\r\n          data={graphiqNegativeReason}\r\n        />\r\n      </VictoryChart>\r\n      </div>\r\n      \r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Analitics\r\n","C:\\Users\\MAV\\mav\\система оценки качества\\frontend\\src\\api\\feetback.js",[],"C:\\Users\\MAV\\mav\\система оценки качества\\frontend\\src\\components\\NavBar.js",[],"C:\\Users\\MAV\\mav\\система оценки качества\\frontend\\src\\pages\\AdminDashboard.js",["24","25","26","27"],"C:\\Users\\MAV\\mav\\система оценки качества\\frontend\\src\\pages\\Login.js",[],{"ruleId":"28","severity":1,"message":"29","line":2,"column":90,"nodeType":"30","messageId":"31","endLine":2,"endColumn":101},{"ruleId":"32","severity":1,"message":"33","line":38,"column":58,"nodeType":"34","messageId":"35","endLine":38,"endColumn":60},{"ruleId":"32","severity":1,"message":"33","line":61,"column":55,"nodeType":"34","messageId":"35","endLine":61,"endColumn":57},{"ruleId":"36","severity":1,"message":"37","line":91,"column":11,"nodeType":"38","endLine":91,"endColumn":73},{"ruleId":"36","severity":1,"message":"37","line":111,"column":11,"nodeType":"38","endLine":111,"endColumn":73},"no-unused-vars","'VictoryArea' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/role-supports-aria-props","The attribute aria-disabled is not supported by the role listitem. This role is implicit on the element li.","JSXOpeningElement"]